{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","_useState7","_useState8","newMovie","setNewMovie","handleFormSubmit","event","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","trim","data","Title","Plot","Poster","imdbID","selectedMovie","finally","_Fragment","onSubmit","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","length","onClick","find","_toConsumableArray","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5690989.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\ntype Props = {\n  movies: Movie[],\n  addMovie: (newMovie: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsError(false);\n    setQuery(event.target.value);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query.trim())\n      .then(data => {\n        if ('Error' in data) {\n          setIsError(true);\n        } else {\n          const {\n            Title,\n            Plot,\n            Poster,\n            imdbID,\n          } = data;\n\n          const selectedMovie: Movie = {\n            title: Title,\n            description: Plot,\n            imgUrl: Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : Poster,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          };\n\n          setNewMovie(selectedMovie);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleAddMovieButton = () => {\n    if (newMovie && !movies.find(movie => movie.imdbId === newMovie?.imdbId)) {\n      addMovie([...movies, newMovie]);\n    }\n\n    setNewMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => handleFormSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': isError })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={query.trim().length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=15e44ef7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}